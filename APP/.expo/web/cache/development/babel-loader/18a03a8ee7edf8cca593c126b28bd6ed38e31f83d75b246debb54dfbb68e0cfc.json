{"ast":null,"code":"import { React } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Formik_Form(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(ScrollView, {\n    children: [_jsx(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        phone_number: \"\"\n      },\n      validationSchema: Yup.object({\n        username: Yup.string().required(\"Name is required\").min(3, \"Invalid Name!!\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"email is Required\"),\n        password: Yup.string().required(\"password is Required\").min(9, \"too short\"),\n        phone_number: Yup.number(\"Invalid Phone Numer\").required(\"Phone Numer is required\")\n      }),\n      children: function children(props) {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              placeholder: \"User name.\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: props.handleChange(\"username\")\n            })\n          }), props.touched.username && props.errors.username ? _jsx(Text, {\n            style: {\n              color: \"red\"\n            },\n            children: props.errors.username\n          }) : null, _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.TextInput,\n              placeholder: \"Email.\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: props.handleChange(\"email\")\n            })\n          }), props.touched.email && props.errors.email ? _jsx(Text, {\n            style: {\n              color: \"red\"\n            },\n            children: props.errors.email\n          }) : null, _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              placeholder: \"Password.\",\n              placeholderTextColor: \"#003f5c\",\n              secureTextEntry: true,\n              onChangeText: props.handleChange(\"password\")\n            })\n          }), props.touched.password && props.errors.password ? _jsx(Text, {\n            style: {\n              color: \"red\"\n            },\n            children: props.errors.password\n          }) : null, _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              placeholder: \"Phone Number.\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: props.handleChange(\"phone_number\")\n            })\n          }), props.touched.phone_number && props.errors.phone_number ? _jsx(Text, {\n            style: {\n              color: \"red\"\n            },\n            children: props.errors.phone_number\n          }) : null, _jsx(TouchableOpacity, {\n            style: styles.loginBtn,\n            onPress: props.handleSubmit,\n            children: _jsx(Text, {\n              style: styles.loginText,\n              children: \"LOGIN\"\n            })\n          })]\n        });\n      }\n    }), pr, _jsx(Button, {\n      title: \"GO to Home\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Home\");\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 10\n  },\n  image: {\n    marginBottom: 40\n  },\n  inputView: {\n    backgroundColor: \"white\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginTop: 20,\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"black\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"green\",\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","ScrollView","Text","TextInput","View","Button","StyleSheet","StatusBar","TouchableOpacity","Formik","Yup","jsx","_jsx","jsxs","_jsxs","Formik_Form","_ref","navigation","children","initialValues","username","email","password","phone_number","validationSchema","object","string","required","min","number","props","style","styles","container","inputView","placeholder","placeholderTextColor","onChangeText","handleChange","touched","errors","color","secureTextEntry","loginBtn","onPress","handleSubmit","loginText","pr","title","navigate","create","flex","backgroundColor","alignItems","justifyContent","marginVertical","image","marginBottom","borderRadius","width","height","marginTop","borderWidth","borderColor","padding","marginLeft","forgot_button"],"sources":["/home/marina/ITI/React_native/ITI-React-Native/APP/src/Pages/Formik_Form.js"],"sourcesContent":["import { React } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  View,\n  Button,\n  StyleSheet,\n  StatusBar,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport default function Formik_Form({ navigation }) {\n\n\n  \n  return (\n    <ScrollView>\n      <Formik\n        initialValues={{\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          phone_number: \"\",\n        }}\n        validationSchema={Yup.object({\n          username: Yup.string()\n            .required(\"Name is required\")\n            .min(3, \"Invalid Name!!\"),\n\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"email is Required\"),\n\n          password: Yup.string()\n            .required(\"password is Required\")\n            .min(9, \"too short\"),\n\n          phone_number: Yup.number(\"Invalid Phone Numer\").required(\n            \"Phone Numer is required\"\n          ),\n        })}\n      >\n        {(props) => (\n          <View style={styles.container}>\n            {/* user name */}\n            <View style={styles.inputView}>\n              <TextInput\n                placeholder=\"User name.\"\n                placeholderTextColor=\"#003f5c\"\n                onChangeText={props.handleChange(\"username\")}\n              />\n            </View>\n            {props.touched.username && props.errors.username ? (\n              <Text style={{ color: \"red\" }}>{props.errors.username}</Text>\n            ) : null}\n\n            {/* Email */}\n            <View style={styles.inputView}>\n              <TextInput\n                style={styles.TextInput}\n                placeholder=\"Email.\"\n                placeholderTextColor=\"#003f5c\"\n                onChangeText={props.handleChange(\"email\")}\n              />\n            </View>\n            {props.touched.email && props.errors.email ? (\n              <Text style={{ color: \"red\" }}>{props.errors.email}</Text>\n            ) : null}\n\n            {/* Password */}\n            <View style={styles.inputView}>\n              <TextInput\n                placeholder=\"Password.\"\n                placeholderTextColor=\"#003f5c\"\n                secureTextEntry={true}\n                onChangeText={props.handleChange(\"password\")}\n              />\n            </View>\n            {props.touched.password && props.errors.password ? (\n              <Text style={{ color: \"red\" }}>{props.errors.password}</Text>\n            ) : null}\n\n            {/* Phone number */}\n            <View style={styles.inputView}>\n              <TextInput\n                placeholder=\"Phone Number.\"\n                placeholderTextColor=\"#003f5c\"\n                onChangeText={props.handleChange(\"phone_number\")}\n              />\n            </View>\n            {props.touched.phone_number && props.errors.phone_number ? (\n              <Text style={{ color: \"red\" }}>{props.errors.phone_number}</Text>\n            ) : null}\n\n            <TouchableOpacity\n              style={styles.loginBtn}\n              onPress={props.handleSubmit}\n            >\n              <Text style={styles.loginText}>LOGIN</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </Formik>\n      {pr}\n      <Button title=\"GO to Home\" onPress={() => navigation.navigate(\"Home\")} />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n      \n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 10,\n  },\n  image: {\n    marginBottom: 40,\n  },\n  inputView: {\n    backgroundColor: \"white\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginTop: 20,\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"black\",\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20,\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"green\",\n    color: \"white\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}