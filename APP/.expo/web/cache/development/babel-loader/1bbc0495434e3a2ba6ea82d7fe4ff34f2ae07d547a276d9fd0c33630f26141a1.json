{"ast":null,"code":"import { React } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Formik_Form(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(ScrollView, {\n    children: _jsx(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        phone_number: \"\"\n      },\n      validationSchema: Yup.object({\n        username: Yup.string().required(\"Name is required\").min(3, \"Invalid Name!!\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"email is Required\"),\n        password: Yup.string().required(\"password is Required\").min(9, \"too short\"),\n        phone_number: Yup.number(\"Invalid Phone Numer\").required(\"Phone Numer is required\")\n      }),\n      children: function children(props) {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsxs(View, {\n            style: styles.inputView,\n            children: [_jsx(TextInput, {\n              style: styles.TextInput,\n              placeholder: \"Email.\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: props.handleChange(\"email\")\n            }), props.touched.email && props.errors.email ? _jsx(Text, {\n              style: {\n                color: \"red\"\n              },\n              children: props.errors.email\n            }) : null]\n          }), _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.TextInput,\n              placeholder: \"Password.\",\n              placeholderTextColor: \"#003f5c\",\n              secureTextEntry: true,\n              onChangeText: function onChangeText(password) {\n                return setPassword(password);\n              }\n            })\n          }), _jsx(Button, {\n            style: styles.loginBtn,\n            title: \"\",\n            onPress: function onPress() {\n              props.handleSubmit;\n            },\n            children: _jsx(Text, {\n              style: styles.loginText,\n              children: \"LOGIN\"\n            })\n          })]\n        });\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#FF1493\"\n  }\n});","map":{"version":3,"names":["React","ScrollView","Text","TextInput","View","StyleSheet","TouchableOpacity","Button","Formik","Yup","jsx","_jsx","jsxs","_jsxs","Formik_Form","_ref","navigation","children","initialValues","username","email","password","phone_number","validationSchema","object","string","required","min","number","props","style","styles","container","inputView","placeholder","placeholderTextColor","onChangeText","handleChange","touched","errors","color","secureTextEntry","setPassword","loginBtn","title","onPress","handleSubmit","loginText","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","width","height","marginBottom","padding","marginLeft","marginTop"],"sources":["/home/marina/ITI/React_native/ITI-React-Native/APP/src/Pages/Formik_Form.js"],"sourcesContent":["import { React } from \"react\";\nimport { ScrollView, Text, TextInput, View, StyleSheet,TouchableOpacity, Button } from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport default function Formik_Form({ navigation }) {\n  return (\n    <ScrollView>\n      <Formik\n        initialValues={{\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          phone_number: \"\",\n        }}\n        validationSchema={Yup.object({\n          username: Yup.string()\n            .required(\"Name is required\")\n            .min(3, \"Invalid Name!!\"),\n\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"email is Required\"),\n\n          password: Yup.string()\n            .required(\"password is Required\")\n            .min(9, \"too short\"),\n\n          phone_number: Yup.number(\"Invalid Phone Numer\").required(\n            \"Phone Numer is required\"\n          ),\n        })}\n      >\n        {(props) => (\n          <View style={styles.container}>\n            <View style={styles.inputView}>\n              <TextInput\n                style={styles.TextInput}\n                placeholder=\"Email.\"\n                placeholderTextColor=\"#003f5c\"\n                onChangeText={props.handleChange(\"email\")}\n              />\n              {props.touched.email && props.errors.email ? (\n                <Text style={{ color: \"red\" }}>{props.errors.email}</Text>\n              ) : null}\n            </View>\n            <View style={styles.inputView}>\n              <TextInput\n                style={styles.TextInput}\n                placeholder=\"Password.\"\n                placeholderTextColor=\"#003f5c\"\n                secureTextEntry={true}\n                onChangeText={(password) => setPassword(password)}\n              />\n            </View>\n            <Button style={styles.loginBtn} title=\"\"  onPress={()=>{props.handleSubmit}}>\n              <Text style={styles.loginText} >LOGIN</Text>\n            </Button>\n          </View>\n          // <View style={{ margin: 10 }}>\n          //   {/* user name */}\n          //   <View>\n          //     <TextInput\n          //       placeholder=\"name\"\n          //       onChangeText={props.handleChange(\"username\")}\n          //     />\n          //     {props.touched.username && props.errors.username ? (\n          //       <Text style={{ color: \"red\" }}>{props.errors.username}</Text>\n          //     ) : null}\n          //   </View>\n\n          //   {/* Email */}\n          //   <View>\n          //     <TextInput\n          //       placeholder=\"email address\"\n          //       onChangeText={props.handleChange(\"email\")}\n          //     />\n          //     {props.touched.email && props.errors.email ? (\n          //       <Text style={{ color: \"red\" }}>{props.errors.email}</Text>\n          //     ) : null}\n          //   </View>\n\n          //   {/* Password */}\n          //   <View>\n          //     <TextInput\n          //       placeholder=\"Password\"\n          //       secureTextEntry={true}\n          //       onChangeText={props.handleChange(\"password\")}\n          //     />\n          //     {props.touched.password && props.errors.password ? (\n          //       <Text style={{ color: \"red\" }}>{props.errors.password}</Text>\n          //     ) : null}\n          //   </View>\n\n          //   {/* Phone number */}\n          //   <View>\n          //     <TextInput\n          //       placeholder=\"phone number\"\n          //       onChangeText={props.handleChange(\"phone_number\")}\n          //     />\n          //     {props.touched.phone_number && props.errors.phone_number ? (\n          //       <Text style={{ color: \"red\" }}>\n          //         {props.errors.phone_number}\n          //       </Text>\n          //     ) : null}\n          //   </View>\n\n          //   <Button title=\"Login\" onPress={()=>{props.handleSubmit;navigation.navigate(\"Home\")}}/>\n\n          // </View>\n        )}\n      </Formik>\n    </ScrollView>\n  );\n  \n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputView: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20,\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#FF1493\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}