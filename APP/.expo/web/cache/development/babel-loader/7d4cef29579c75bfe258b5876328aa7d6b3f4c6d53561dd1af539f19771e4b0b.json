{"ast":null,"code":"import { React, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from \"react-native-table-component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListTodo(_ref) {\n  var item = _ref.item;\n  var header = ['heading 1', 'heading 2', 'heading 3'];\n  var data = [['gfg1', 'gfg2', 'gfg3'], ['gfg4', 'gfg5', 'gfg6'], ['gfg7', 'gfg8', 'gfg9']];\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        children: item.value\n      }), _jsx(Button, {\n        title: \"Delete\"\n      }), _jsx(Button, {\n        title: \"Update\"\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginTop: 200\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 18\n        },\n        children: \"tasks\"\n      }), _jsxs(Table, {\n        borderStyle: {\n          borderWidth: 2,\n          borderColor: \"#c8e1ff\"\n        },\n        children: [_jsx(Row, {\n          data: \"Task\"\n        }), _jsx(Row, {\n          data: header\n        }), _jsx(Row, {\n          data: header\n        }), _jsx(Rows, {\n          data: data\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: \"#fff\"\n  },\n  head: {\n    height: 40,\n    backgroundColor: \"#f1f8ff\"\n  },\n  text: {\n    margin: 6\n  }\n});","map":{"version":3,"names":["React","useState","ScrollView","Text","TextInput","View","Button","StyleSheet","Formik","Yup","Table","TableWrapper","Row","Rows","Col","Cols","Cell","jsx","_jsx","jsxs","_jsxs","ListTodo","_ref","item","header","data","children","value","title","style","marginTop","fontSize","borderStyle","borderWidth","borderColor","styles","create","container","flex","padding","paddingTop","backgroundColor","head","height","text","margin"],"sources":["/home/marina/ITI/React_native/ITI-React-Native/APP/src/Pages/Todo/ListTodo.js"],"sourcesContent":["import { React, useState } from \"react\";\nimport { ScrollView, Text, TextInput, View, Button ,StyleSheet} from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Table,\n  TableWrapper,\n  Row,\n  Rows,\n  Col,\n  Cols,\n  Cell,\n} from \"react-native-table-component\";\n\nexport default function ListTodo({ item }) {\n \n    const header = ['heading 1', 'heading 2', 'heading 3']\n    const data = [\n        ['gfg1', 'gfg2', 'gfg3'],\n        ['gfg4', 'gfg5', 'gfg6'],\n        ['gfg7', 'gfg8', 'gfg9']\n  \n    ]\n  \n  \n  return (\n    <ScrollView>\n      <View>\n        <Text>{item.value}</Text>\n        <Button title=\"Delete\" />\n        <Button title=\"Update\" />\n      </View>\n\n      <View style={{ marginTop: 200 }}>\n        <Text style={{ fontSize: 18 }}>tasks</Text>\n        <Table borderStyle={{ borderWidth: 2, borderColor: \"#c8e1ff\" }}>\n          <Row data=\"Task\" />\n          <Row data={header} />\n          <Row data={header} />\n          <Rows data={data} />\n        </Table>\n      </View>\n    </ScrollView>\n  );\n}\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: \"#fff\" },\n  head: { height: 40, backgroundColor: \"#f1f8ff\" },\n  text: { margin: 6 },\n});\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SACEC,KAAK,EACLC,YAAY,EACZC,GAAG,EACHC,IAAI,EACJC,GAAG,EACHC,IAAI,EACJC,IAAI,QACC,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAW;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAEnC,IAAMC,MAAM,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC;EACtD,IAAMC,IAAI,GAAG,CACT,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EACxB,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EACxB,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAE3B;EAGH,OACEL,KAAA,CAAClB,UAAU;IAAAwB,QAAA,GACTN,KAAA,CAACf,IAAI;MAAAqB,QAAA,GACHR,IAAA,CAACf,IAAI;QAAAuB,QAAA,EAAEH,IAAI,CAACI;MAAK,CAAO,CAAC,EACzBT,IAAA,CAACZ,MAAM;QAACsB,KAAK,EAAC;MAAQ,CAAE,CAAC,EACzBV,IAAA,CAACZ,MAAM;QAACsB,KAAK,EAAC;MAAQ,CAAE,CAAC;IAAA,CACrB,CAAC,EAEPR,KAAA,CAACf,IAAI;MAACwB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAE;MAAAJ,QAAA,GAC9BR,IAAA,CAACf,IAAI;QAAC0B,KAAK,EAAE;UAAEE,QAAQ,EAAE;QAAG,CAAE;QAAAL,QAAA,EAAC;MAAK,CAAM,CAAC,EAC3CN,KAAA,CAACV,KAAK;QAACsB,WAAW,EAAE;UAAEC,WAAW,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAU,CAAE;QAAAR,QAAA,GAC7DR,IAAA,CAACN,GAAG;UAACa,IAAI,EAAC;QAAM,CAAE,CAAC,EACnBP,IAAA,CAACN,GAAG;UAACa,IAAI,EAAED;QAAO,CAAE,CAAC,EACrBN,IAAA,CAACN,GAAG;UAACa,IAAI,EAAED;QAAO,CAAE,CAAC,EACrBN,IAAA,CAACL,IAAI;UAACY,IAAI,EAAEA;QAAK,CAAE,CAAC;MAAA,CACf,CAAC;IAAA,CACJ,CAAC;EAAA,CACG,CAAC;AAEjB;AACA,IAAMU,MAAM,GAAG5B,UAAU,CAAC6B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IAAEC,IAAI,EAAE,CAAC;IAAEC,OAAO,EAAE,EAAE;IAAEC,UAAU,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAO,CAAC;EAC5EC,IAAI,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEF,eAAe,EAAE;EAAU,CAAC;EAChDG,IAAI,EAAE;IAAEC,MAAM,EAAE;EAAE;AACpB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}