{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport AddTOdo from \"./AddTOdo\";\nimport ListTodo from \"./ListTodo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Todo(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var submitHandle = function submitHandle(value) {\n    setData(function (prevTodo) {\n      return [{\n        value: value\n      }].concat(_toConsumableArray(prevTodo));\n    });\n  };\n  return _jsxs(ScrollView, {\n    children: [_jsx(AddTOdo, {\n      submitHandle: submitHandle\n    }), _jsx(ListTodo, {\n      data: data\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","ScrollView","Text","TextInput","View","Button","Formik","Yup","AddTOdo","ListTodo","jsx","_jsx","jsxs","_jsxs","Todo","_ref","navigation","_useState","_useState2","_slicedToArray","data","setData","submitHandle","value","prevTodo","concat","_toConsumableArray","children"],"sources":["/home/marina/ITI/React_native/ITI-React-Native/APP/src/Pages/Todo/Todo.js"],"sourcesContent":["import { React, useState } from \"react\";\nimport { ScrollView, Text, TextInput, View, Button } from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport AddTOdo from \"./AddTOdo\";\nimport ListTodo from \"./ListTodo\";\nexport default function Todo({ navigation }) {\n  const [data, setData] = useState([]);\n\n  const submitHandle = (value) => {\n    setData((prevTodo) => {\n      return [{\n        value: value\n      },\n       ...prevTodo\n      ]\n     \n\n      \n    })\n    \n  }\n  return (\n    <ScrollView>\n      <AddTOdo submitHandle={submitHandle}></AddTOdo>\n      <ListTodo data={data}></ListTodo>\n      \n    </ScrollView>\n  );\n}\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,OAAO;AACd,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAClC,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACvC,IAAAC,SAAA,GAAwBjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC9BF,OAAO,CAAC,UAACG,QAAQ,EAAK;MACpB,QAAQ;QACND,KAAK,EAAEA;MACT,CAAC,EAAAE,MAAA,CAAAC,kBAAA,CACGF,QAAQ;IAKd,CAAC,CAAC;EAEJ,CAAC;EACD,OACEX,KAAA,CAACZ,UAAU;IAAA0B,QAAA,GACThB,IAAA,CAACH,OAAO;MAACc,YAAY,EAAEA;IAAa,CAAU,CAAC,EAC/CX,IAAA,CAACF,QAAQ;MAACW,IAAI,EAAEA;IAAK,CAAW,CAAC;EAAA,CAEvB,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}