{"ast":null,"code":"import { React } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Formik_Form(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(ScrollView, {\n    children: [_jsx(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Login Form\"\n    }), _jsx(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        phone_number: \"\"\n      },\n      validationSchema: Yup.object({\n        username: Yup.string().required(\"Name is required\").min(3, \"Invalid Name!!\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"email is Required\"),\n        password: Yup.string().required(\"password is Required\").min(9, \"too short\"),\n        phone_number: Yup.number(\"Invalid Phone Numer\").required(\"Phone Numer is required\")\n      }),\n      children: function children(props) {\n        return _jsxs(View, {\n          style: {\n            margin: 10\n          },\n          children: [_jsxs(View, {\n            children: [_jsx(TextInput, {\n              placeholder: \"name\",\n              onChangeText: props.handleChange(\"username\")\n            }), props.touched.username && props.errors.username ? _jsx(Text, {\n              style: {\n                color: \"red\"\n              },\n              children: props.errors.username\n            }) : null]\n          }), _jsxs(View, {\n            children: [_jsx(TextInput, {\n              placeholder: \"email address\",\n              onChangeText: props.handleChange(\"email\")\n            }), props.touched.email && props.errors.email ? _jsx(Text, {\n              style: {\n                color: \"red\"\n              },\n              children: props.errors.email\n            }) : null]\n          }), _jsxs(View, {\n            children: [_jsx(TextInput, {\n              placeholder: \"Password\",\n              secureTextEntry: true,\n              onChangeText: props.handleChange(\"password\")\n            }), props.touched.password && props.errors.password ? _jsx(Text, {\n              style: {\n                color: \"red\"\n              },\n              children: props.errors.password\n            }) : null]\n          }), _jsxs(View, {\n            children: [_jsx(TextInput, {\n              placeholder: \"phone number\",\n              onChangeText: props.handleChange(\"phone_number\")\n            }), props.touched.phone_number && props.errors.phone_number ? _jsx(Text, {\n              style: {\n                color: \"red\"\n              },\n              children: props.errors.phone_number\n            }) : null]\n          }), _jsx(Button, {\n            title: \"Login\",\n            onPress: props.handleSubmit,\n            children: props.errors ? _jsx(Text, {\n              children: \"Invalid\"\n            }) : navigation.navigate(\"Home\")\n          })]\n        });\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","ScrollView","Text","TextInput","View","Button","Formik","Yup","jsx","_jsx","jsxs","_jsxs","Formik_Form","_ref","navigation","children","style","textAlign","initialValues","username","email","password","phone_number","validationSchema","object","string","required","min","number","props","margin","placeholder","onChangeText","handleChange","touched","errors","color","secureTextEntry","title","onPress","handleSubmit","navigate"],"sources":["/home/marina/ITI/React_native/ITI-React-Native/APP/src/Pages/Formik_Form.js"],"sourcesContent":["import { React } from \"react\";\nimport { ScrollView, Text, TextInput, View, Button } from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport default function Formik_Form({ navigation }) {\n  return (\n    <ScrollView>\n      <Text style={{ textAlign: \"center\" }}>Login Form</Text>\n      <Formik\n        initialValues={{\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          phone_number: \"\",\n        }}\n        validationSchema={Yup.object({\n          username: Yup.string()\n            .required(\"Name is required\")\n            .min(3, \"Invalid Name!!\"),\n\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"email is Required\"),\n\n          password: Yup.string()\n            .required(\"password is Required\")\n            .min(9, \"too short\"),\n\n          phone_number: Yup.number(\"Invalid Phone Numer\").required(\n            \"Phone Numer is required\"\n          ),\n        })}\n      >\n        {(props) => (\n          <View style={{ margin: 10 }}>\n            {/* user name */}\n            <View>\n              <TextInput\n                placeholder=\"name\"\n                onChangeText={props.handleChange(\"username\")}\n              />\n              {props.touched.username && props.errors.username ? (\n                <Text style={{ color: \"red\" }}>{props.errors.username}</Text>\n              ) : null}\n            </View>\n\n            {/* Email */}\n            <View>\n              <TextInput\n                placeholder=\"email address\"\n                onChangeText={props.handleChange(\"email\")}\n              />\n              {props.touched.email && props.errors.email ? (\n                <Text style={{ color: \"red\" }}>{props.errors.email}</Text>\n              ) : null}\n            </View>\n\n            {/* Password */}\n            <View>\n              <TextInput\n                placeholder=\"Password\"\n                secureTextEntry={true}\n                onChangeText={props.handleChange(\"password\")}\n              />\n              {props.touched.password && props.errors.password ? (\n                <Text style={{ color: \"red\" }}>{props.errors.password}</Text>\n              ) : null}\n            </View>\n\n            {/* Phone number */}\n            <View>\n              <TextInput\n                placeholder=\"phone number\"\n                onChangeText={props.handleChange(\"phone_number\")}\n              />\n              {props.touched.phone_number && props.errors.phone_number ? (\n                <Text style={{ color: \"red\" }}>\n                  {props.errors.phone_number}\n                </Text>\n              ) : null}\n            </View>\n\n            <Button title=\"Login\" onPress={props.handleSubmit}>\n              {props.errors ? \n                <Text>Invalid</Text>\n               \n              : \n                 navigation.navigate(\"Home\")\n              }\n            </Button>\n          </View>\n        )}\n      </Formik>\n    </ScrollView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}